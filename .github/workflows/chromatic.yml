# Workflow name
name: 'Chromatic'

# Event for the workflow
on:
  push:
    branches:
      - 'develop'
      - 'master'
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
    branches:
      - 'develop'
      - 'master'

# List of jobs
jobs:
  chromatic-deployment:
    # Operating System
    runs-on: ubuntu-latest
    # Job steps
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # `action/setup-node@v2` will create an .npmrc file referencing $NODE_AUTH_TOKEN
      # So we can set $NODE_AUTH_TOKEN with right permission when we publish or install npm packages
      - uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: './.github/actions/get_runner_env_version'
        id: get-runner-env-version
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules/
          key: ${{ steps.get-runner-env-version.outputs.os }}-node${{ steps.get-runner-env-version.outputs.node }}-yarn-${{ hashFiles('yarn.lock') }}
      - name: Install packages without updating lock file
        run: yarn --frozen-lockfile
      - name: Build Storybook
        run: yarn build-storybook
      # Start of deploy storybook to AWS S3 bucket as a static website
      - name: Sync files to the test website with the AWS CLI
        if: env.WORKING_BRANCH == 'develop' || env.WORKING_BRANCH == 'master'
        run: |
          aws s3 sync ./storybook-static s3://${{ env.STORYBOOK_S3_BUCKET }}/${{ env.WORKING_BRANCH }}/ --delete && \
          aws s3 cp s3://${{ env.STORYBOOK_S3_BUCKET }}/${{ env.WORKING_BRANCH }}/ s3://${{ env.STORYBOOK_S3_BUCKET }}/${{ env.WORKING_BRANCH }}/ --exclude "*" --include "*.js.map" --include "*.js" \
            --recursive --metadata-directive REPLACE --cache-control "public,max-age=2592000,immutable" && \
          aws s3 cp s3://${{ env.STORYBOOK_S3_BUCKET }}/${{ env.WORKING_BRANCH }}/ s3://${{ env.STORYBOOK_S3_BUCKET }}/${{ env.WORKING_BRANCH }}/ --exclude "*" --include "*.html" \
            --recursive --metadata-directive REPLACE --cache-control no-cache
        env:
          WORKING_BRANCH: ${{ steps.extract_branch.outputs.branch }}
          STORYBOOK_S3_BUCKET: frontend-storybook-bucket
      # End of deploy storybook to AWS S3 bucket as a static website
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          autoAcceptChanges: master|develop
          skip: nostorybook/**
          exitZeroOnChanges: true
          storybookBuildDir: storybook-static
